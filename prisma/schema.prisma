datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String        @id
  email        String        @unique
  boards       Board[]
  comments     Comment[]
  cardLikes    CardLike[]
  commentLikes CommentLike[]
  cards        Card[]

  @@map("users")
}

model Board {
  id           String        @id
  name         String
  created      DateTime      @default(now())
  updated      DateTime      @updatedAt
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  columns      BoardColumn[]
  cards        Card[]
  cardLikes    CardLike[]
  comments     Comment[]
  commentLikes CommentLike[]

  @@map("boards")
}

model BoardColumn {
  id       String @id
  name     String
  position Int
  boardId  String
  board    Board  @relation(fields: [boardId], references: [id])
  cards    Card[]

  @@map("board_columns")
}

model Card {
  id       String      @id
  content  String
  userId   String
  user     User        @relation(fields: [userId], references: [id])
  boardId  String
  board    Board       @relation(fields: [boardId], references: [id])
  columnId String
  column   BoardColumn @relation(fields: [columnId], references: [id])
  likes    CardLike[]
  comments Comment[]

  @@map("cards")
}

model CardLike {
  id        String   @id
  timestamp DateTime @default(now())
  userId    String
  boardId   String
  board     Board    @relation(fields: [boardId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  cardId    String
  card      Card     @relation(fields: [cardId], references: [id])

  @@map("cards_likes")
}

model Comment {
  id           String        @id
  content      String
  timestamp    DateTime      @default(now())
  boardId      String
  board        Board         @relation(fields: [boardId], references: [id])
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  cardId       String
  card         Card          @relation(fields: [cardId], references: [id])
  commentLikes CommentLike[]

  @@map("comments")
}

model CommentLike {
  id        String   @id
  timestamp DateTime @default(now())
  boardId   String
  board     Board    @relation(fields: [boardId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  commentId String
  comment   Comment  @relation(fields: [commentId], references: [id])

  @@map("comments_likes")
}
